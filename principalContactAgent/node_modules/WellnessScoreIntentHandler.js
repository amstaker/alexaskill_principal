'use strict';

var request = require("request");

function WellnessScoreIntentHandler(intent, session, response) {
	if(!session.attributes.age) {
        session.attributes.question = "age";
        response.ask("How old are you?");
        return;
    }
    if(!session.attributes.pay) {
        session.attributes.question = "pay";
        response.ask("What is your annual salary?");
        return;
    }
    if(!session.attributes.rate) {
        session.attributes.question = "rate";
        response.ask("What is your contribution rate?");
        return;
    }
    if(!session.attributes.savings) {
        session.attributes.question = "savings";
        response.ask("What is the current value of your retirement savings?");
        return;
    }

    var today = new Date();
    var birthDate = new Date((today.getFullYear() - session.attributes.age), today.getMonth(), today.getDate());

    var options = { 
        method: 'POST',
        url: 'https://secure02.principal.com/ris/api/public/calculators/retirementprojection.json',
        headers: { 
            'cache-control': 'no-cache',
            'content-type': 'application/json'
        },
        body: { 
            retirementAccountProjectionInput: { 
                dateOfBirth: birthDate.getFullYear() + '-01-01T00:00:00.000-0600',
                annualSalary: session.attributes.pay,
                salaryIncreasePercent: 3.5,
                inflationPercent: 2.5,
                taxationRatePercent: 25,
                desiredRetirementAge: 65,
                rateOfReturnPercent: 7,
                incomeReplacementRatio: 85,
                accountBalancePreTax: session.attributes.savings,
                currentDeferralAmount: session.attributes.rate,
                deferralTypePercent: true,
                socialSecurityAmount: 1300,
                outsideAccountValue: 0,
                payPeriods: 26,
                employerMatches: [],
                planLimits: [],
                employerContributions: [],
                includeSocialSecurityInWellnessScore: true,
                socialSecurityAmountUserInputted: true 
            } 
        },
        json: true 
    };

    request(options, function (error, responseValue, body) {
        if (error) throw new Error(error);

        response.tell("Your wellness score is " + body.wellnessScore);
    });
}


exports.respond = WellnessScoreIntentHandler;
